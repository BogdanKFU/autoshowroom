/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.merann.bopopov.autoshowroom.server.rs.api;

import ru.merann.bopopov.autoshowroom.server.model.ResultListModel;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-04-22T11:54:55.246+03:00[Europe/Moscow]")

@Validated
@Api(value = "models", description = "the models API")
public interface ModelsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "", nickname = "getModelsByName", notes = "Get all models with name simular to searching text", response = ResultListModel.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully get models", response = ResultListModel.class) })
    @RequestMapping(value = "/models",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ResultListModel> getModelsByName(@ApiParam(value = "Search text") @Valid @RequestParam(value = "searchText", required = false) String searchText) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"items\" : [ {    \"price\" : 6000000,    \"name\" : \"A8\",    \"id\" : 3,    \"make\" : {      \"name\" : \"Audi\",      \"id\" : 3    }  }, {    \"price\" : 6000000,    \"name\" : \"A8\",    \"id\" : 3,    \"make\" : {      \"name\" : \"Audi\",      \"id\" : 3    }  } ]}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
