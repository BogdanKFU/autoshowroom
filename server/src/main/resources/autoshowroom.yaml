openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Autoshowroom API'
  description: 'An API that allows clients to obtain existing information of orders, create, edit and delete orders'
  contact:
    name: Bogdan Popov
    email: ibogdanpopov@gmail.com

servers:
  - url: http://localhost:9000/
    description: local server

paths:
  /orders:
    get:
      operationId: getAllOrders
      description: Get all orders information
      responses:
        200:
          description: Successfully get orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'

  /clients/{client_id}/orders:
    get:
      operationId: getOrdersByClient
      description: Get all orders for client filtering by status
      parameters:
        - name: status
          in: query
          description: Order status
          schema:
            type: string
        - name: client_id
          in: path
          description: Client id
          schema:
            type: integer
      responses:
        200:
          description: Successfully get orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
    post:
      operationId: createNewOrder
      description: Create a new order in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/OrderRequest'
      responses:
        200:
          description: Order was successfully created
          content:
            application/json:
              schema:

        404:
          description: Not found

  /clients/{id}/orders/{id}:
    delete:
      operationId: deleteOrder
      description: Delete order from the database
      responses:
        200:
          description: Order was successfully removed
    put:
      operationId: updateOrder
      description: Update the order in the database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/OrderRequest'
      responses:
        200:
          description: Order was successfully changed


components:
  schemas:
    Orders:
      description: Array of orders
      type: object
      items:
        type: object
        $ref: '#/components/schemas/Order'

    OrderRequest:
      description: Model used for creating and updating order
      properties:
        client:
          type: string
          example: Bogdan
          description: Username
        car:
          type: object
          description: Contains car info
          properties:
            make:
              type: integer
              example: 3
            model:
              type: integer
              example: 4
        options:
          type: array
          items:
            type: string
            example: Спортивный аэродинамический обвес

    Order:
      description: Model containing order information
      properties:
        id:
          type: integer
          example: 4
        client:
          type: string
          example: Bogdan
          description: Username
        car:
          type: object
          $ref: '#/components/schemas/Car'
        status:
          type: string
          example: ACCEPTED
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'

    Car:
      description: Contains car information included price
      properties:
        make:
          type: string
          example: Audi
        model:
          type: string
          example: A8
        price:
          type: integer
          example: 6000000

    Option:
      description: Contains option information included price
      properties:
        name:
          type: string
          example: Спортивный аэродинамический обвес
        price:
          type: integer
          example: 65000