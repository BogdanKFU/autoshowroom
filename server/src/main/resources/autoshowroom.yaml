swagger: "2.0"
info:
  version: 1.0.0
  title: Autoshowroom
host: localhost:9000
basePath: /v2
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /orders:
    get:
      operationId: getAllOrders
      description: Get all orders information
      responses:
        200:
          description: Successfully get orders
          schema:
            $ref: '#/definitions/ResultList[Order]'
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      parameters:
        - in: path
          name: userId
          required: true
          type: integer
          minimum: 1
          description: The ID of the user to return.
      responses:
        200:
          description: A User object.
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 4
              name:
                type: string
                example: Arthur Dent
        400:
          description: The specified user ID is invalid (e.g. not a number).
        404:
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error
  /clients/{client_id}/orders:
    get:
      operationId: getOrdersByClient
      description: Get all orders for client filtering by status
      parameters:
        - in: header
          name: status
          description: Order status
          required: false
          type: string
        - in: path
          name: client_id
          required: true
          type: integer
          format: int64
          description: Client id

      responses:
        200:
          description: Successfully get orders
          schema:
            $ref: '#/definitions/ResultList[Order]'
    post:
      operationId: createNewOrder
      description: Create a new order in the database
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id
          type: integer
          format: int64
        - name: order
          in: body
          required: true
          schema:
            type: object
            $ref: '#/definitions/OrderRequest'
      responses:
        200:
          description: Order was successfully created
          schema:
            type: object
            $ref: '#/definitions/Order'
        404:
          description: Not found

  /clients/{client_id}/orders/{order_id}:
    parameters:
      - name: client_id
        in: path
        required: true
        description: Client id
        type: integer
        format: int64
      - name: order_id
        in: path
        required: true
        description: Client id
        type: integer
        format: int64
    delete:
      operationId: deleteOrder
      description: Delete order from the database
      responses:
        200:
          schema:
            type: integer
            format: int64
          description: Order was successfully removed
    put:
      operationId: updateOrder
      description: Update the order in the database
      parameters:
        - in: body
          name: order
          schema:
            type: object
            $ref: '#/definitions/OrderRequest'
      responses:
        200:
          description: Order was successfully changed
          schema:
            type: object
            $ref: '#/definitions/Order'
        404:
          description: Not found

definitions:
  ResultList[Order]:
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Order'
  OrderRequest:
    description: Model used for creating and updating order
    properties:
      car:
        type: object
        description: Contains car info
        properties:
          make:
            type: integer
            format: int64
            example: 3
          model:
            type: integer
            format: int64
            example: 4
      options:
        type: array
        items:
          type: integer
          format: int64
          example: 4

  Order:
    description: Model containing order information
    properties:
      id:
        type: integer
        format: int64
        example: 4
      client:
        type: object
        $ref: '#/definitions/Client'
      car:
        type: object
        $ref: '#/definitions/Car'
      status:
        type: object
        $ref: '#/definitions/Status'

  Car:
    description: Contains car information included price
    properties:
      model:
        type: object
        $ref: '#/definitions/Model'
      options:
        type: array
        items:
          $ref: '#/definitions/Option'

  Option:
    description: Contains option information included price
    properties:
      id:
        type: integer
        format: int64
        example: 3
      name:
        type: string
        example: Спортивный аэродинамический обвес
      price:
        type: integer
        example: 65000

  Client:
    description: Contains client information
    properties:
      id:
        type: integer
        format: int64
        example: 3
      name:
        type: string
        example: Bogdan

  Make:
    description: Contains make information
    properties:
      id:
        type: integer
        format: int64
        example: 3
      name:
        type: string
        example: Audi

  Model:
    description: Contains model information
    properties:
      id:
        type: integer
        format: int64
        example: 3
      name:
        type: string
        example: A8
      make:
        type: object
        $ref: '#/definitions/Make'
      price:
        type: integer
        example: 6000000

  Status:
    description: Contains model information
    properties:
      name:
        type: string
        enum:
          - ACCEPTED
          - INPROGRESS
          - COMPLETE
        example: ACCEPTED