pipeline {

    agent {
        label "master"
    }

    environment {
        PROJECT_ID = 'green-antonym-244311'
        CLUSTER_NAME = 'autoshowroom-cluster'
        LOCATION = 'us-west1-c'
        CREDENTIALS_ID = 'autoshowroom'
        NEW_AUTOSHOWROOM_DEPLOYMENT = 'autoshowroom-server-updated.yml'
        AUTOSHOWROOM_DEPLOYMENT = 'autoshowroom-server.yml'
    }

    options {
        skipDefaultCheckout(true)
    }

    stages {

        stage('Build') {
            steps {
                checkout scm

                dir("server") {
                    echo '------------------------------------------------'
                    echo 'BUILDING...'
                    echo '------------------------------------------------'
                    sh 'gradle clean'
                    sh 'gradle build -x test'
                }
            }
        }

        stage('Testing') {
            steps {
                dir("server") {
                    echo '------------------------------------------------'
                    echo 'TESTING...'
                    echo '------------------------------------------------'
                    sh 'gradle test'
                }
            }
        }

        stage('Containerize') {
            steps {
                dir("server") {
                    echo '------------------------------------------------'
                    echo 'CONTAINERIZING...'
                    echo '------------------------------------------------'
                    script {
                        app = docker.build("us.gcr.io/${PROJECT_ID}/autoshowroom-server:2.0.${env.BUILD_NUMBER}-${env.BRANCH_NAME}")
                    }
                }
            }
        }

        stage('Deploying') {
            steps {
                dir("server") {
                    echo '------------------------------------------------'
                    echo 'DEPLOYING...'
                    echo '------------------------------------------------'
                    script {
                        echo "Pushing the image..."
                        docker.withRegistry('https://us.gcr.io', 'gcr:autoshowroom') {
                           app.push("2.0.${env.BUILD_NUMBER}-${env.BRANCH_NAME}")
                           app.push("latest")
                        }
                        echo "Changing the version of product..."
                        sh "envsubst < ${AUTOSHOWROOM_DEPLOYMENT} > ${NEW_AUTOSHOWROOM_DEPLOYMENT}"
                    }
                    echo "Applying changes to Kubernetes..."
                    step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: "${NEW_AUTOSHOWROOM_DEPLOYMENT}", credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
                    script {
                        sh "rm ${NEW_AUTOSHOWROOM_DEPLOYMENT}"
                    }
                }
            }
        }

    }
}