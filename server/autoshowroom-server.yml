# App deployment
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: autoshowroom
  labels:
    app: autoshowroom
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: autoshowroom
    spec:
      containers:
        - name: autoshowroom
          image: us.gcr.io/green-antonym-244311/autoshowroom:2.0.${BUILD_NUMBER}
          ports:
            - containerPort: 9000
          env:
            - name: spring.datasource.url
              value: jdbc:sqlserver://mssql-clusterip
            - name: spring.datasource.username
              value: sa
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: mssql-secret
                  key: password
---
apiVersion: v1
kind: Service
metadata:
  name: autoshowroom-lb
spec:
  selector:
    app: autoshowroom
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: autoshowroom-clusterip
spec:
  selector:
    app: autoshowroom
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000
  type: ClusterIP
# Secret for database connection
---
apiVersion: v1
kind: Secret
metadata:
  name: mssql-secret
type: Opaque
data:
  password: UEBTc1cwUmQh

# MS SQL deployment
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mssql
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mssql
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mssql
          image: mcr.microsoft.com/mssql/server:2017-CU14-ubuntu
          ports:
            - containerPort: 1433
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-secret
                  key: password
            - name: MSSQL_DATA_DIR
              value: /var/opt/mssql/mdf
            - name: MSSQL_LOG_DIR
              value: /var/opt/mssql/ldf

          volumeMounts:
            - name: mssql-base-volume
              mountPath: /var/opt/mssql
            - name: mssql-ldf-volume
              mountPath: /var/opt/mssql/ldf
            - name: mssql-mdf-volume
              mountPath: /var/opt/mssql/mdf
      volumes:
        - name: mssql-base-volume
          persistentVolumeClaim:
            claimName: mssql-base-volume
        - name: mssql-mdf-volume
          persistentVolumeClaim:
            claimName: mssql-mdf-volume
        - name: mssql-ldf-volume
          persistentVolumeClaim:
            claimName: mssql-ldf-volume
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-base-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-mdf-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-ldf-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mssql-lb
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: mssql-clusterip
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: ClusterIP