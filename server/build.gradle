apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.openapi.generator'

group 'ru.merann.bopopov.autoshowroom'
version '1.0-SNAPSHOT'
// TODO: Make server executable jar
sourceCompatibility = 1.8

configurations {
    rest
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
        classpath "org.openapitools:openapi-generator-gradle-plugin:3.3.4"
    }
}

configurations.all {
    exclude module: 'logback-classic'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compile("org.springframework.boot:spring-boot-starter-web-services") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
    compile("org.apache.cxf:cxf-spring-boot-starter-jaxws:3.3.1")
    compile("wsdl4j:wsdl4j")
    compile("org.projectlombok:lombok")
    compile("org.liquibase:liquibase-core")
    compile("com.microsoft.sqlserver:mssql-jdbc:7.2.1.jre8")
    compile("com.h2database:h2")
    compile("io.springfox:springfox-swagger-ui:2.9.2")
    compile("io.springfox:springfox-swagger2:2.9.2")
    //compile("io.swagger:swagger-annotations:1.5.22")
    compile("org.webjars:swagger-ui:3.20.9")
    compile("org.apache.cxf:cxf-spring-boot-starter-jaxrs:3.3.1")
    compile("org.apache.cxf:cxf-rt-rs-service-description-openapi-v3:3.3.1")
    compile("org.springframework.boot:spring-boot-starter-log4j2")
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/autoshowroom.yaml".toString()
    outputDir = "$projectDir".toString()
    apiPackage = ("ru.merann.bopopov.autoshowroom.server.rs.api").toString()
    skipOverwrite = true;
    invokerPackage = ("ru.merann.bopopov.autoshowroom.server.rs").toString()
    modelPackage = ("ru.merann.bopopov.autoshowroom.server.model").toString()
    modelFilesConstrainedTo = [
            "Error"
    ]
    configOptions = [
            dateLibrary: "java8"
    ]
    systemProperties = [
            apis           : "",
            models         : "",
            supportingFiles: ""
    ]
}

openApiValidate {
    inputSpec = "$projectDir/src/main/resources/autoshowroom.yaml".toString()
}

springBoot {
    mainClassName = 'ru.merann.bopopov.autoshowroom.server.ServerApp'
}

//compileJava.dependsOn tasks.openApiGenerate