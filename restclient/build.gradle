apply plugin: 'java'
apply plugin: 'org.openapi.generator'

group 'ru.merann.bopopov.autoshowroom'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
        classpath "org.openapitools:openapi-generator-gradle-plugin:3.3.4"
    }
}

sourceSets {
    main {
        java.outputDir = file('src/main/resources/META-INF/resources/WEB-INF/classes')
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '2.1.4.RELEASE', ext: 'pom'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.1.4.RELEASE'
    //compile 'org.springframework.shell:spring-shell-starter:2.0.1.BUILD-SNAPSHOT'
    compile "io.gsonfire:gson-fire:1.8.3"
    compile "com.google.code.gson:gson:2.8.1"
    // https://mvnrepository.com/artifact/io.swagger/swagger-annotations
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.22'
    compile 'commons-lang:commons-lang:2.6'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.4.RELEASE'

    // JSF API
    // https://mvnrepository.com/artifact/com.sun.faces/jsf-api
    compile group: 'com.sun.faces', name: 'jsf-api', version: '2.2.18'
    // JSF implementation
    // https://mvnrepository.com/artifact/com.sun.faces/jsf-impl
    compile group: 'com.sun.faces', name: 'jsf-impl', version: '2.2.18'
    // To make working JSF
    compile group: 'org.apache.tomcat', name: 'tomcat-jasper', version: '9.0.19'
    // For rewriting URL
    /*
    Using JSF without a tool like Rewrite would lead us to ugly and non RESTful-friendly URLs that heavily use query parameters to navigate.
     */
    compile group: 'org.ocpsoft.rewrite', name: 'rewrite-servlet', version: '3.4.2.Final'
    compile group: 'org.ocpsoft.rewrite', name: 'rewrite-integration-faces', version: '3.4.2.Final'
    compile group: 'org.ocpsoft.rewrite', name: 'rewrite-config-prettyfaces', version: '3.4.2.Final'
    // Additional components for JSF
    // https://mvnrepository.com/artifact/org.primefaces/primefaces
    compile group: 'org.primefaces', name: 'primefaces', version: '7.0'

    // https://mvnrepository.com/artifact/jstl/jstl
    compile group: 'jstl', name: 'jstl', version: '1.2'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '27.0.1-jre'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

openApiGenerate {
    generatorName = "java"
    inputSpec = "http://localhost:9000/api-contract".toString()
    outputDir = "$projectDir".toString()
    apiPackage = ("ru.merann.bopopov.autoshowroom.restclient.rs.controller").toString()
    invokerPackage = ("ru.merann.bopopov.autoshowroom.restclient.rs").toString()
    modelPackage = ("ru.merann.bopopov.autoshowroom.restclient.model").toString()
    validateSpec = false
    modelFilesConstrainedTo = [
            "Error"
    ]
    configOptions = [
            dateLibrary: "java8"
    ]
    systemProperties = [
            models         : ""
    ]
}

openApiValidate {
    inputSpec = "http://localhost:9000/controller-docs".toString()
}